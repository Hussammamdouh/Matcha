{
	"info": {
		"_postman_id": "6a77d12f-feaf-44fa-9fd4-d29d47961f29",
		"name": "Matcha Complete API",
		"description": "Complete API collection for Matcha backend - all modules and endpoints",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "40270796",
		"_collection_link": "https://hussam-w-bta3o.postman.co/workspace/ArtCode-Workspace~e2f6f7ad-569b-485c-8c8a-253fb7dc54f3/collection/40270796-6a77d12f-feaf-44fa-9fd4-d29d47961f29?action=share&source=collection_link&creator=40270796"
	},
	"item": [
		{
			"name": "Storage",
			"item": [
				{
					"name": "Generate Upload URL",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"filePath\": \"posts/{{postId}}/media/test.jpg\",\n  \"contentType\": \"image/jpeg\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/storage/upload-url",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"storage",
								"upload-url"
							]
						}
					},
					"response": []
				},
				{
					"name": "Chat Sign Upload",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"conversationId\": \"{{conversationId}}\",\n  \"type\": \"image\",\n  \"mime\": \"image/jpeg\",\n  \"size\": 10240\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/storage/chat/sign",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"storage",
								"chat",
								"sign"
							]
						}
					},
					"response": []
				},
				{
					"name": "Proxy Upload (Cloudinary)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Save uploaded url to use in create post/comment bodies",
									"let res = {};",
									"try { res = pm.response.json(); } catch (e) {}",
									"if (res && res.ok && res.data && res.data.url) { pm.collectionVariables.set('uploadedUrl', res.data.url); }"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "./Screenshot (314).png"
								},
								{
									"key": "public_id",
									"value": "posts/{{postId}}/media/screenshot-314.png",
									"type": "text"
								},
								{
									"key": "resource_type",
									"value": "image",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/storage/proxy/upload",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"storage",
								"proxy",
								"upload"
							]
						}
					},
					"response": []
				}
			],
			"description": "Storage signing and proxy endpoints"
		},
		{
			"name": "Health & Status",
			"item": [
				{
					"name": "Health Check",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/healthz",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"healthz"
							]
						}
					},
					"response": []
				},
				{
					"name": "Ready Check",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/readyz",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"readyz"
							]
						}
					},
					"response": []
				},
				{
					"name": "Detailed Health",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/healthz/detailed",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"healthz",
								"detailed"
							]
						}
					},
					"response": []
				},
				{
					"name": "Metrics",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/metrics",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"metrics"
							]
						}
					},
					"response": []
				}
			],
			"description": "Operational endpoints to check service health, readiness for dependencies, and basic metrics. Useful for monitoring and troubleshooting."
		},
		{
			"name": "Social",
			"item": [
				{
					"name": "Follow User",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/me/follow/{{userId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"me",
								"follow",
								"{{userId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Unfollow User",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/me/unfollow/{{userId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"me",
								"unfollow",
								"{{userId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Public Profile",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/users/{{userId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"users",
								"{{userId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get User Liked Posts",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/users/{{userId}}/likes?pageSize=20",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"users",
								"{{userId}}",
								"likes"
							],
							"query": [
								{
									"key": "pageSize",
									"value": "20"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get User Followers",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/users/{{userId}}/followers?pageSize=20",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"users",
								"{{userId}}",
								"followers"
							],
							"query": [
								{
									"key": "pageSize",
									"value": "20"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get User Following",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/users/{{userId}}/following?pageSize=20",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"users",
								"{{userId}}",
								"following"
							],
							"query": [
								{
									"key": "pageSize",
									"value": "20"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get User Posts",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/users/{{userId}}/posts?pageSize=20",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"users",
								"{{userId}}",
								"posts"
							],
							"query": [
								{
									"key": "pageSize",
									"value": "20",
									"description": "Number of posts to return (default: 20, max: 100)"
								},
								{
									"key": "cursor",
									"value": "",
									"description": "Pagination cursor for next page",
									"disabled": true
								}
							]
						},
						"description": "Get posts from a specific user. Respects privacy settings:\n- Public profiles: Anyone can access\n- Private profiles: Only followers can access\n- Users can always access their own posts"
					},
					"response": []
				}
			],
			"description": "Social endpoints including follow system and user profile access. Use these to follow/unfollow users, fetch followers/following lists, and access user posts with privacy controls."
		},
		{
			"name": "Authentication",
			"item": [
				{
					"name": "Register with Email",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"user@example.com\",\n  \"password\": \"password123\",\n  \"nickname\": \"testuser\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/auth/register-email",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"register-email"
							]
						}
					},
					"response": []
				},
				{
					"name": "Register with Email - Direct Upload",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "email",
									"value": "user@example.com",
									"type": "text"
								},
								{
									"key": "password",
									"value": "password123",
									"type": "text"
								},
								{
									"key": "nickname",
									"value": "testuser",
									"type": "text"
								},
								{
									"key": "file",
									"type": "file",
									"src": "./Screenshot (314).png"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/auth/register-email",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"register-email"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login with Email",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Capture tokens and session timing",
									"let json = {};",
									"try { json = pm.response.json(); } catch (e) {}",
									"if (json && json.data) {",
									"  if (json.data.idToken) pm.collectionVariables.set('authToken', json.data.idToken);",
									"  if (json.data.refreshToken) pm.collectionVariables.set('refreshToken', json.data.refreshToken);",
									"  if (json.data.sessionStartedAt !== undefined) pm.collectionVariables.set('sessionStartedAt', json.data.sessionStartedAt);",
									"  if (json.data.tokenExpiresAt !== undefined) pm.collectionVariables.set('tokenExpiresAt', json.data.tokenExpiresAt);",
									"}",
									"// Inform about httpOnly cookie",
									"pm.test('Login sets httpOnly refreshToken cookie', function () {",
									"  const cookies = pm.response.cookies.getAll();",
									"  pm.expect(Array.isArray(cookies)).to.be.true;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"user@example.com\",\n  \"password\": \"password123\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/auth/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Refresh Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let json = {};",
									"try { json = pm.response.json(); } catch (e) {}",
									"if (json && json.data) {",
									"  if (json.data.idToken) pm.collectionVariables.set('authToken', json.data.idToken);",
									"  if (json.data.refreshToken) pm.collectionVariables.set('refreshToken', json.data.refreshToken);",
									"  if (json.data.sessionStartedAt !== undefined) pm.collectionVariables.set('sessionStartedAt', json.data.sessionStartedAt);",
									"  if (json.data.tokenExpiresAt !== undefined) pm.collectionVariables.set('tokenExpiresAt', json.data.tokenExpiresAt);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"refreshToken\": \"{{refreshToken}}\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/auth/refresh",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"refresh"
							]
						}
					},
					"response": []
				},
				{
					"name": "Google OAuth",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"idToken\": \"google_id_token_here\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/auth/oauth/google",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"oauth",
								"google"
							]
						}
					},
					"response": []
				},
				{
					"name": "Apple OAuth",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"idToken\": \"apple_id_token_here\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/auth/oauth/apple",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"oauth",
								"apple"
							]
						}
					},
					"response": []
				},
				{
					"name": "Request Password Reset",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"user@example.com\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/auth/password/forgot",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"password",
								"forgot"
							]
						}
					},
					"response": []
				},
				{
					"name": "Setup MFA",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"type\": \"totp\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/auth/mfa/setup",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"mfa",
								"setup"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify MFA",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"type\": \"totp\",\n  \"code\": \"123456\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/auth/mfa/verify",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"mfa",
								"verify"
							]
						}
					},
					"response": []
				},
				{
					"name": "Disable MFA",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/auth/mfa/disable",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"mfa",
								"disable"
							]
						}
					},
					"response": []
				}
			],
			"description": "Auth lifecycle including email/password registration, login, OAuth providers, and multi-factor operations."
		},
		{
			"name": "User Profile",
			"item": [
				{
					"name": "Get Current User Profile",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/me",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"me"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get My Stats & Posts",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/me/stats",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"me",
								"stats"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get My Saved Posts",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/me/saves?pageSize=20",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"me",
								"saves"
							],
							"query": [
								{
									"key": "pageSize",
									"value": "20"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get My Liked Posts",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/me/likes?pageSize=20",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"me",
								"likes"
							],
							"query": [
								{
									"key": "pageSize",
									"value": "20"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update User Profile",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"nickname\": \"new_nickname123\",\n  \"avatarUrl\": \"https://example.com/avatar.jpg\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/me",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"me"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update User Profile - Direct Upload",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "nickname",
									"value": "new_nickname123",
									"type": "text"
								},
								{
									"key": "file",
									"type": "file",
									"src": "./Screenshot (314).png"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/me",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"me"
							]
						}
					},
					"response": []
				},
				{
					"name": "Send Email Verification",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/me/email/verify/send",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"me",
								"email",
								"verify",
								"send"
							]
						}
					},
					"response": []
				},
				{
					"name": "Logout",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"all\": false\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/me/logout",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"me",
								"logout"
							]
						}
					},
					"response": []
				},
				{
					"name": "Logout All Devices",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/me/logout-all",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"me",
								"logout-all"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Account",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/me",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"me"
							]
						}
					},
					"response": []
				},
				{
					"name": "Generate Avatar Upload URL",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"fileName\": \"avatar.jpg\",\n  \"contentType\": \"image/jpeg\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/me/avatar/upload-url",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"me",
								"avatar",
								"upload-url"
							]
						}
					},
					"response": []
				},
				{
					"name": "Confirm Avatar Upload",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"filePath\": \"avatars/user123/avatar.jpg\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/me/avatar/confirm",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"me",
								"avatar",
								"confirm"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get User Settings",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/me/settings",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"me",
								"settings"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update User Settings",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"accountPrivacy\": \"private\",\n  \"showLikedPosts\": false,\n  \"showFollowing\": true,\n  \"showFollowers\": false\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/me/settings",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"me",
								"settings"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get User Communities",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/me/communities?pageSize=20",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"me",
								"communities"
							],
							"query": [
								{
									"key": "pageSize",
									"value": "20"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Detailed Followers",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/me/followers?pageSize=20",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"me",
								"followers"
							],
							"query": [
								{
									"key": "pageSize",
									"value": "20"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Detailed Following",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/me/following?pageSize=20",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"me",
								"following"
							],
							"query": [
								{
									"key": "pageSize",
									"value": "20"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Blocked Users",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/me/blocked?pageSize=20",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"me",
								"blocked"
							],
							"query": [
								{
									"key": "pageSize",
									"value": "20"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Block User",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"blockedUserId\": \"{{userId}}\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/me/block",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"me",
								"block"
							]
						}
					},
					"response": []
				},
				{
					"name": "Unblock User",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/me/block/{{userId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"me",
								"block",
								"{{userId}}"
							]
						}
					},
					"response": []
				}
			],
			"description": "User profile management and email verification."
		},
		{
			"name": "Public User Profiles",
			"item": [
				{
					"name": "Get Public User Profile",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/users/{{userId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"users",
								"{{userId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Public User Liked Posts",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/users/{{userId}}/likes?pageSize=20",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"users",
								"{{userId}}",
								"likes"
							],
							"query": [
								{
									"key": "pageSize",
									"value": "20"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Public User Followers",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/users/{{userId}}/followers?pageSize=20",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"users",
								"{{userId}}",
								"followers"
							],
							"query": [
								{
									"key": "pageSize",
									"value": "20"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Public User Following",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/users/{{userId}}/following?pageSize=20",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"users",
								"{{userId}}",
								"following"
							],
							"query": [
								{
									"key": "pageSize",
									"value": "20"
								}
							]
						}
					},
					"response": []
				}
			],
			"description": "Public user profile endpoints with privacy settings. These endpoints respect user privacy settings and return appropriate messages when data is private."
		},
		{
			"name": "Devices",
			"item": [
				{
					"name": "Register Device",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"platform\": \"web\",\n  \"pushToken\": \"push_token_here\",\n  \"deviceId\": \"{{deviceId}}\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/me/devices/register",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"me",
								"devices",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get User Devices",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/me/devices",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"me",
								"devices"
							]
						}
					},
					"response": []
				},
				{
					"name": "Revoke Device",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/me/devices/{{deviceId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"me",
								"devices",
								"{{deviceId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Manage Device (Unified)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"action\": \"register\",\n  \"platform\": \"web\",\n  \"pushToken\": \"push_token_here\",\n  \"deviceId\": \"{{deviceId}}\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/me/devices/manage",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"me",
								"devices",
								"manage"
							]
						}
					},
					"response": []
				}
			],
			"description": "Manage the current device for notifications and sessions. Unified manage endpoint supports register/list/revoke."
		},
		{
			"name": "Sessions",
			"item": [
				{
					"name": "Get User Sessions",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/me/sessions",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"me",
								"sessions"
							]
						}
					},
					"response": []
				}
			],
			"description": "User sessions listing (placeholder). Future improvements will expose active sessions."
		},
		{
			"name": "Communities",
			"item": [
				{
					"name": "Create Community",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Test Community\",\n  \"slug\": \"test-community\",\n  \"description\": \"A test community\",\n  \"isPrivate\": false\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/communities",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"communities"
							]
						}
					},
					"response": []
				},
				{
					"name": "List Communities",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/communities",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"communities"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Community",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/communities/{{communityId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"communities",
								"{{communityId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Community",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"displayName\": \"Updated Community Name\",\n  \"description\": \"Updated description\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/communities/{{communityId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"communities",
								"{{communityId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Join Community",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/communities/{{communityId}}/join",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"communities",
								"{{communityId}}",
								"join"
							]
						}
					},
					"response": []
				},
				{
					"name": "Leave Community",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/communities/{{communityId}}/leave",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"communities",
								"{{communityId}}",
								"leave"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Community Moderators",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/communities/{{communityId}}/moderators",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"communities",
								"{{communityId}}",
								"moderators"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Detailed Moderators",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/communities/{{communityId}}/moderators/detailed?pageSize=20",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"communities",
								"{{communityId}}",
								"moderators",
								"detailed"
							],
							"query": [
								{
									"key": "pageSize",
									"value": "20"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Moderator",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"userId\": \"{{userId}}\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/communities/{{communityId}}/moderators",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"communities",
								"{{communityId}}",
								"moderators"
							]
						}
					},
					"response": []
				},
				{
					"name": "Remove Moderator",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/communities/{{communityId}}/moderators/{{userId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"communities",
								"{{communityId}}",
								"moderators",
								"{{userId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Ban User",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"userId\": \"{{userId}}\",\n  \"reason\": \"Violation of community guidelines\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/communities/{{communityId}}/ban",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"communities",
								"{{communityId}}",
								"ban"
							]
						}
					},
					"response": []
				},
				{
					"name": "Unban User",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/communities/{{communityId}}/ban/{{userId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"communities",
								"{{communityId}}",
								"ban",
								"{{userId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Banned Users",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/communities/{{communityId}}/banned?pageSize=20",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"communities",
								"{{communityId}}",
								"banned"
							],
							"query": [
								{
									"key": "pageSize",
									"value": "20"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Community Posts",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/communities/{{communityId}}/posts?sort=new&pageSize=20",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"communities",
								"{{communityId}}",
								"posts"
							],
							"query": [
								{
									"key": "sort",
									"value": "new"
								},
								{
									"key": "pageSize",
									"value": "20"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Community Members",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/communities/{{communityId}}/members?pageSize=20",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"communities",
								"{{communityId}}",
								"members"
							],
							"query": [
								{
									"key": "pageSize",
									"value": "20"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Community",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/communities/{{communityId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"communities",
								"{{communityId}}"
							]
						}
					},
					"response": []
				}
			],
			"description": "Community CRUD and membership. Use toggle-membership for a single endpoint to join or leave."
		},
		{
			"name": "Posts",
			"item": [
				{
					"name": "List Posts",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/posts?pageSize=20",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"posts"
							],
							"query": [
								{
									"key": "pageSize",
									"value": "20"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Post (Public)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"title\": \"Public Post\",\n  \"body\": \"This is a public post\",\n  \"visibility\": \"public\",\n  \"media\": [ { \"url\": \"{{uploadedUrl}}\", \"type\": \"image\" } ]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/posts",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"posts"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Post (Public) - Direct Upload (file)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "title",
									"value": "Public Post with Direct Upload",
									"type": "text"
								},
								{
									"key": "body",
									"value": "This post has an image uploaded directly",
									"type": "text"
								},
								{
									"key": "visibility",
									"value": "public",
									"type": "text"
								},
								{
									"key": "file",
									"type": "file",
									"src": "./Screenshot (314).png"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/posts",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"posts"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Post (Community)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"title\": \"Community Post\",\n  \"body\": \"This is a community post\",\n  \"visibility\": \"community\",\n  \"communityId\": \"{{communityId}}\",\n  \"media\": [ { \"url\": \"{{uploadedUrl}}\", \"type\": \"image\" } ]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/posts",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"posts"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Post",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/posts/{{postId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"posts",
								"{{postId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Post",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"title\": \"Updated Post Title\",\n  \"body\": \"Updated post content\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/posts/{{postId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"posts",
								"{{postId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Post",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/posts/{{postId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"posts",
								"{{postId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Vote (Unified)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"entityType\": \"post\",\n  \"entityId\": \"{{postId}}\",\n  \"value\": 1\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/posts/vote",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"posts",
								"vote"
							]
						},
						"description": "Unified vote endpoint for posts and comments. Body: entityType: 'post'|'comment', entityId: '<id>', value: -1|0|1"
					},
					"response": []
				},
				{
					"name": "Vote on Post (Specific)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"value\": 1\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/posts/{{postId}}/vote",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"posts",
								"{{postId}}",
								"vote"
							]
						},
						"description": "Vote on a specific post. Body: { value: -1|0|1 }"
					},
					"response": []
				},
				{
					"name": "Toggle Save (Unified)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"action\": \"save\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/posts/{{postId}}/toggle-save",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"posts",
								"{{postId}}",
								"toggle-save"
							]
						}
					},
					"response": []
				},
				{
					"name": "Toggle Like",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/posts/{{postId}}/toggle-like",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"posts",
								"{{postId}}",
								"toggle-like"
							]
						}
					},
					"response": []
				},
				{
					"name": "Save Post",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/posts/{{postId}}/save",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"posts",
								"{{postId}}",
								"save"
							]
						}
					},
					"response": []
				},
				{
					"name": "Unsave Post",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/posts/{{postId}}/save",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"posts",
								"{{postId}}",
								"save"
							]
						}
					},
					"response": []
				}
			],
			"description": "Public and community posts. Unified endpoints for voting and save toggling simplify integration."
		},
		{
			"name": "Comments",
			"item": [
				{
					"name": "Get Post Comments",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/posts/{{postId}}/comments?sort=new&pageSize=20&cursor=",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"posts",
								"{{postId}}",
								"comments"
							],
							"query": [
								{
									"key": "sort",
									"value": "new",
									"description": "Sort order: new, old, top"
								},
								{
									"key": "pageSize",
									"value": "20",
									"description": "Number of comments per page (1-50)"
								},
								{
									"key": "cursor",
									"value": "",
									"description": "Pagination cursor (optional)"
								}
							]
						},
						"description": "Get all comments for a specific post. Supports sorting and pagination."
					},
					"response": []
				},
				{
					"name": "Create Comment (JSON)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"body\": \"This is my comment on this post!\",\n  \"parentId\": null,\n  \"media\": [ { \"url\": \"{{uploadedUrl}}\", \"type\": \"image\" } ]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/posts/{{postId}}/comments",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"posts",
								"{{postId}}",
								"comments"
							]
						},
						"description": "Create a new comment for a specific post. Uses a URL in media array."
					},
					"response": []
				},
				{
					"name": "Create Comment - Direct Upload (file)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "body",
									"value": "This is my comment with a direct image upload",
									"type": "text"
								},
								{
									"key": "file",
									"type": "file",
									"src": "./Screenshot (314).png"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/posts/{{postId}}/comments",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"posts",
								"{{postId}}",
								"comments"
							]
						},
						"description": "Create a new comment and upload a file directly in the body."
					},
					"response": []
				},
				{
					"name": "Create Reply Comment",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"body\": \"This is a reply to the comment above!\",\n  \"parentId\": \"{{commentId}}\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/posts/{{postId}}/comments",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"posts",
								"{{postId}}",
								"comments"
							]
						},
						"description": "Create a reply to an existing comment. The parentId should be the ID of the comment you're replying to."
					},
					"response": []
				},
				{
					"name": "Get Comment by ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/posts/{{postId}}/comments/{{commentId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"posts",
								"{{postId}}",
								"comments",
								"{{commentId}}"
							]
						},
						"description": "Get a specific comment by its ID."
					},
					"response": []
				},
				{
					"name": "Update Comment",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"body\": \"This is my updated comment!\",\n  \"edited\": true\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/posts/{{postId}}/comments/{{commentId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"posts",
								"{{postId}}",
								"comments",
								"{{commentId}}"
							]
						},
						"description": "Update a comment. Only the author can edit their own comment."
					},
					"response": []
				},
				{
					"name": "Delete Comment",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/posts/{{postId}}/comments/{{commentId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"posts",
								"{{postId}}",
								"comments",
								"{{commentId}}"
							]
						},
						"description": "Delete a comment. Only the author, post owner, or moderators can delete comments."
					},
					"response": []
				},
				{
					"name": "Vote on Comment",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"value\": 1\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/posts/{{postId}}/comments/{{commentId}}/vote",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"posts",
								"{{postId}}",
								"comments",
								"{{commentId}}",
								"vote"
							]
						},
						"description": "Vote on a comment. Body: { value: -1|0|1 } where 1=upvote, -1=downvote, 0=remove."
					},
					"response": []
				},
				{
					"name": "Get Comment Thread",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/posts/{{postId}}/comments/{{commentId}}/thread",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"posts",
								"{{postId}}",
								"comments",
								"{{commentId}}",
								"thread"
							]
						},
						"description": "Get a comment and all its replies (thread)."
					},
					"response": []
				},
				{
					"name": "Get Comment Stats",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/posts/{{postId}}/comments/{{commentId}}/stats",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"posts",
								"{{postId}}",
								"comments",
								"{{commentId}}",
								"stats"
							]
						},
						"description": "Get statistics for a specific comment."
					},
					"response": []
				}
			],
			"description": "Post-specific comment CRUD and related info (threads, stats). All comment operations are scoped to specific posts with realtime WebSocket support."
		},
		{
			"name": "Reports",
			"item": [
				{
					"name": "Create Report",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"type\": \"post\",\n  \"targetId\": \"{{postId}}\",\n  \"reason\": \"spam\",\n  \"description\": \"This post contains spam content\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/reports",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"reports"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Report",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/reports/{{reportId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"reports",
								"{{reportId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Report",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"status\": \"resolved\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/reports/{{reportId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"reports",
								"{{reportId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Reports",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/reports?pageSize=20",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"reports"
							],
							"query": [
								{
									"key": "pageSize",
									"value": "20"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Report Stats",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/reports/stats",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"reports",
								"stats"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Content Reports",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/reports/content/post/{{postId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"reports",
								"content",
								"post",
								"{{postId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Report (Unified)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"surface\": \"feed\",\n  \"entityType\": \"post\",\n  \"entityId\": \"{{postId}}\",\n  \"reason\": \"spam\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/reports/create",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"reports",
								"create"
							]
						}
					},
					"response": []
				}
			],
			"description": "User-facing reports across surfaces (feed, chat, men). Use unified creation endpoint to report any entity."
		},
		{
			"name": "Admin",
			"item": [
				{
					"name": "Reports - List (Moderator)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{adminToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/admin/reports?limit=20",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"admin",
								"reports"
							],
							"query": [
								{
									"key": "limit",
									"value": "20"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Reports - Claim",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{adminToken}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"surface\": \"feed\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/admin/reports/{{reportId}}/claim",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"admin",
								"reports",
								"{{reportId}}",
								"claim"
							]
						}
					},
					"response": []
				},
				{
					"name": "Reports - Resolve",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{adminToken}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"surface\": \"feed\",\n  \"resolutionCode\": \"removed\",\n  \"note\": \"Handled\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/admin/reports/{{reportId}}/resolve",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"admin",
								"reports",
								"{{reportId}}",
								"resolve"
							]
						}
					},
					"response": []
				},
				{
					"name": "Reports - Dismiss",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{adminToken}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"surface\": \"feed\",\n  \"note\": \"Invalid\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/admin/reports/{{reportId}}/dismiss",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"admin",
								"reports",
								"{{reportId}}",
								"dismiss"
							]
						}
					},
					"response": []
				},
				{
					"name": "Reports - Bulk Resolve",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{adminToken}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"reportIds\": [\"{{reportId}}\"],\n  \"surface\": \"feed\",\n  \"resolutionCode\": \"removed\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/admin/reports/bulk/resolve",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"admin",
								"reports",
								"bulk",
								"resolve"
							]
						}
					},
					"response": []
				},
				{
					"name": "Reports - Bulk Dismiss",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{adminToken}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"reportIds\": [\"{{reportId}}\"],\n  \"surface\": \"feed\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/admin/reports/bulk/dismiss",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"admin",
								"reports",
								"bulk",
								"dismiss"
							]
						}
					},
					"response": []
				},
				{
					"name": "Users - Set Role (Admin)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{adminToken}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"role\": \"moderator\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/admin/users/{{userId}}/role",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"admin",
								"users",
								"{{userId}}",
								"role"
							]
						}
					},
					"response": []
				},
				{
					"name": "Users - Ban (Moderator)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{adminToken}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"reason\": \"Abuse\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/admin/users/{{userId}}/ban",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"admin",
								"users",
								"{{userId}}",
								"ban"
							]
						}
					},
					"response": []
				},
				{
					"name": "Users - Unban (Moderator)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{adminToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/admin/users/{{userId}}/unban",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"admin",
								"users",
								"{{userId}}",
								"unban"
							]
						}
					},
					"response": []
				},
				{
					"name": "Users - Shadowban (Moderator)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{adminToken}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"reason\": \"Spam\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/admin/users/{{userId}}/shadowban",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"admin",
								"users",
								"{{userId}}",
								"shadowban"
							]
						}
					},
					"response": []
				},
				{
					"name": "Users - Unshadowban (Moderator)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{adminToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/admin/users/{{userId}}/unshadowban",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"admin",
								"users",
								"{{userId}}",
								"unshadowban"
							]
						}
					},
					"response": []
				},
				{
					"name": "Users - Logout All (Admin)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{adminToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/admin/users/{{userId}}/logout-all",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"admin",
								"users",
								"{{userId}}",
								"logout-all"
							]
						}
					},
					"response": []
				},
				{
					"name": "Users - Action (Unified)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{adminToken}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"action\": \"ban\",\n  \"reason\": \"Abuse\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/admin/users/{{userId}}/action",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"admin",
								"users",
								"{{userId}}",
								"action"
							]
						}
					},
					"response": []
				},
				{
					"name": "Users - Search (Moderator)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{adminToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/admin/users/search?q=test&limit=20",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"admin",
								"users",
								"search"
							],
							"query": [
								{
									"key": "q",
									"value": "test"
								},
								{
									"key": "limit",
									"value": "20"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Users - Get Details (Moderator)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{adminToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/admin/users/{{userId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"admin",
								"users",
								"{{userId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "System - Get Features (Admin)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{adminToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/admin/system/features",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"admin",
								"system",
								"features"
							]
						}
					},
					"response": []
				},
				{
					"name": "System - Update Features (Admin)",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{adminToken}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"updates\": { \"kyc\": true }\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/admin/system/features",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"admin",
								"system",
								"features"
							]
						}
					},
					"response": []
				},
				{
					"name": "System - Update Retention (Admin)",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{adminToken}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"days\": 30\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/admin/system/retention",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"admin",
								"system",
								"retention"
							]
						}
					},
					"response": []
				},
				{
					"name": "Gender Reviews - List (Moderator)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{adminToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/admin/reviews/gender?limit=20",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"admin",
								"reviews",
								"gender"
							],
							"query": [
								{
									"key": "limit",
									"value": "20"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Gender Reviews - Approve (Moderator)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{adminToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/admin/reviews/gender/{{userId}}/approve",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"admin",
								"reviews",
								"gender",
								"{{userId}}",
								"approve"
							]
						}
					},
					"response": []
				},
				{
					"name": "Gender Reviews - Reject (Moderator)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{adminToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/admin/reviews/gender/{{userId}}/reject",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"admin",
								"reviews",
								"gender",
								"{{userId}}",
								"reject"
							]
						}
					},
					"response": []
				},
				{
					"name": "Exports - Create User Export (Moderator)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{adminToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/admin/export/users/{{userId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"admin",
								"export",
								"users",
								"{{userId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Exports - Get Job (Moderator)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{adminToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/admin/export/jobs/{{exportJobId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"admin",
								"export",
								"jobs",
								"{{exportJobId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Audits - List (Moderator)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{adminToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/admin/audits?limit=20",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"admin",
								"audits"
							],
							"query": [
								{
									"key": "limit",
									"value": "20"
								}
							]
						}
					},
					"response": []
				}
			],
			"description": "Moderator/Admin tools. Unified user action endpoint covers ban/unban/shadowban/logout-all in one route."
		},
		{
			"name": "Men Reviews",
			"item": [
				{
					"name": "Get Aggregated Reviews",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/reviews/aggregate?limit=20",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"reviews",
								"aggregate"
							],
							"query": [
								{
									"key": "limit",
									"value": "20"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Review",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"communityId\": \"{{communityId}}\",\n  \"targetId\": \"some-target\",\n  \"label\": \"red\",\n  \"comment\": \"Suspicious behavior\",\n  \"media\": [ { \"url\": \"{{uploadedUrl}}\", \"type\": \"image\" } ]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/reviews",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"reviews"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Review - Direct Upload (file)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "communityId",
									"value": "{{communityId}}",
									"type": "text"
								},
								{
									"key": "targetId",
									"value": "some-target",
									"type": "text"
								},
								{
									"key": "label",
									"value": "red",
									"type": "text"
								},
								{
									"key": "comment",
									"value": "Suspicious behavior",
									"type": "text"
								},
								{
									"key": "file",
									"type": "file",
									"src": "./Screenshot (314).png"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/reviews",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"reviews"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Review",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/reviews/{{reviewId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"reviews",
								"{{reviewId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Vote on Review",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"label\": \"green\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/reviews/{{reviewId}}/vote",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"reviews",
								"{{reviewId}}",
								"vote"
							]
						}
					},
					"response": []
				},
				{
					"name": "List Review Comments",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/reviews/{{reviewId}}/comments",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"reviews",
								"{{reviewId}}",
								"comments"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Review Comment",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"body\": \"I agree\",\n  \"parentCommentId\": null\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/reviews/{{reviewId}}/comments",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"reviews",
								"{{reviewId}}",
								"comments"
							]
						}
					},
					"response": []
				}
			],
			"description": "Men Reviews module: create and vote on reviews (red/green/unknown), threaded comments, and aggregation."
		},
		{
			"name": "Feed",
			"item": [
				{
					"name": "Home Feed",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/posts/feed/home?sort=new&pageSize=20",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"posts",
								"feed",
								"home"
							],
							"query": [
								{
									"key": "sort",
									"value": "new"
								},
								{
									"key": "pageSize",
									"value": "20"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Saved Posts",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/posts/feed/saved?pageSize=20",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"posts",
								"feed",
								"saved"
							],
							"query": [
								{
									"key": "pageSize",
									"value": "20"
								}
							]
						}
					},
					"response": []
				}
			],
			"description": "Home and saved feeds."
		},
		{
			"name": "Chat",
			"item": [
				{
					"name": "Conversations",
					"item": [
						{
							"name": "Create Conversation",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{authToken}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"participantIds\": [\"{{userId}}\"],\n  \"type\": \"direct\",\n  \"title\": \"Test Conversation\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/chat/conversations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"chat",
										"conversations"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Conversations",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{authToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/chat/conversations?pageSize=20",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"chat",
										"conversations"
									],
									"query": [
										{
											"key": "pageSize",
											"value": "20"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Conversation",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{authToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/chat/conversations/{{conversationId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"chat",
										"conversations",
										"{{conversationId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Conversation",
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{authToken}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"title\": \"Updated Conversation Title\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/chat/conversations/{{conversationId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"chat",
										"conversations",
										"{{conversationId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Conversation",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{authToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/chat/conversations/{{conversationId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"chat",
										"conversations",
										"{{conversationId}}"
									]
								}
							},
							"response": []
						}
					],
					"description": "Conversation management endpoints"
				},
				{
					"name": "Messages",
					"item": [
						{
							"name": "Send Message",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{authToken}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"conversationId\": \"{{conversationId}}\",\n  \"type\": \"text\",\n  \"text\": \"Hello! This is a test message.\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/chat/messages",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"chat",
										"messages"
									]
								}
							},
							"response": []
						},
						{
							"name": "Send Message with Media",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{authToken}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"conversationId\": \"{{conversationId}}\",\n  \"type\": \"image\",\n  \"media\": {\n    \"url\": \"{{uploadedUrl}}\",\n    \"mime\": \"image/jpeg\",\n    \"size\": 1024000,\n    \"width\": 1920,\n    \"height\": 1080\n  }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/chat/messages",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"chat",
										"messages"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Messages",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{authToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/chat/messages/conversation/{{conversationId}}?pageSize=20&order=desc",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"chat",
										"messages",
										"conversation",
										"{{conversationId}}"
									],
									"query": [
										{
											"key": "pageSize",
											"value": "20"
										},
										{
											"key": "order",
											"value": "desc"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Edit Message",
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{authToken}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"text\": \"This is an edited message\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/chat/messages/{{messageId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"chat",
										"messages",
										"{{messageId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Message",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{authToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/chat/messages/{{messageId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"chat",
										"messages",
										"{{messageId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add Reaction",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{authToken}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"value\": \"👍\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/chat/messages/{{messageId}}/reactions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"chat",
										"messages",
										"{{messageId}}",
										"reactions"
									]
								}
							},
							"response": []
						},
						{
							"name": "Remove Reaction",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{authToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/chat/messages/{{messageId}}/reactions/👍",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"chat",
										"messages",
										"{{messageId}}",
										"reactions",
										"👍"
									]
								}
							},
							"response": []
						}
					],
					"description": "Message operations including send, edit, delete, and reactions"
				},
				{
					"name": "Unified Chat Operations",
					"item": [
						{
							"name": "Unified Operation",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{authToken}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"operation\": \"create_conversation\",\n  \"data\": {\n    \"participantIds\": [\"{{userId}}\"],\n    \"type\": \"direct\"\n  }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/chat/operation",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"chat",
										"operation"
									]
								}
							},
							"response": []
						},
						{
							"name": "Send Message (Unified)",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{authToken}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"operation\": \"send_message\",\n  \"data\": {\n    \"conversationId\": \"{{conversationId}}\",\n    \"type\": \"text\",\n    \"text\": \"Hello from unified operation!\"\n  }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/chat/operation",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"chat",
										"operation"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Messages (Unified)",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{authToken}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"operation\": \"get_messages\",\n  \"data\": {\n    \"conversationId\": \"{{conversationId}}\",\n    \"pageSize\": 20,\n    \"order\": \"desc\"\n  }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/chat/operation",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"chat",
										"operation"
									]
								}
							},
							"response": []
						},
						{
							"name": "Mark as Read (Unified)",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{authToken}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"operation\": \"mark_read\",\n  \"data\": {\n    \"conversationId\": \"{{conversationId}}\"\n  }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/chat/operation",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"chat",
										"operation"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Typing (Unified)",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{authToken}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"operation\": \"update_typing\",\n  \"data\": {\n    \"conversationId\": \"{{conversationId}}\",\n    \"isTyping\": true\n  }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/chat/operation",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"chat",
										"operation"
									]
								}
							},
							"response": []
						}
					],
					"description": "Unified chat operations for mobile convenience"
				},
				{
					"name": "Presence & Typing",
					"item": [
						{
							"name": "Update Presence",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{authToken}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"state\": \"online\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/chat/presence/heartbeat",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"chat",
										"presence",
										"heartbeat"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Typing Status",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{authToken}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"isTyping\": true\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/chat/conversations/{{conversationId}}/typing",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"chat",
										"conversations",
										"{{conversationId}}",
										"typing"
									]
								}
							},
							"response": []
						},
						{
							"name": "Mark Conversation as Read",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{authToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/chat/conversations/{{conversationId}}/read",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"chat",
										"conversations",
										"{{conversationId}}",
										"read"
									]
								}
							},
							"response": []
						}
					],
					"description": "Presence and typing indicators"
				},
				{
					"name": "Blocks",
					"item": [
						{
							"name": "Block User",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{authToken}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"blockedUserId\": \"{{userId}}\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/chat/blocks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"chat",
										"blocks"
									]
								}
							},
							"response": []
						},
						{
							"name": "Unblock User",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{authToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/chat/blocks/{{userId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"chat",
										"blocks",
										"{{userId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Blocked Users",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{authToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/chat/blocks?pageSize=20",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"chat",
										"blocks"
									],
									"query": [
										{
											"key": "pageSize",
											"value": "20"
										}
									]
								}
							},
							"response": []
						}
					],
					"description": "User blocking functionality"
				},
				{
					"name": "Reports",
					"item": [
						{
							"name": "Create Chat Report",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{authToken}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"type\": \"message\",\n  \"targetId\": \"{{messageId}}\",\n  \"reason\": \"spam\",\n  \"description\": \"This message contains spam content\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/chat/reports",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"chat",
										"reports"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Chat Reports",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{authToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/chat/reports?pageSize=20",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"chat",
										"reports"
									],
									"query": [
										{
											"key": "pageSize",
											"value": "20"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Chat Report",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{authToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/chat/reports/{{reportId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"chat",
										"reports",
										"{{reportId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Report Status",
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{authToken}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"status\": \"resolved\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/chat/reports/{{reportId}}/status",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"chat",
										"reports",
										"{{reportId}}",
										"status"
									]
								}
							},
							"response": []
						}
					],
					"description": "Chat-specific reporting functionality"
				}
			],
			"description": "Complete chat system including conversations, messages, unified operations, presence, blocks, and reports."
		},
		{
			"name": "Search",
			"item": [
				{
					"name": "Global Search",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/search?q=test&type=all&sortBy=relevance&limit=20",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"search"
							],
							"query": [
								{
									"key": "q",
									"value": "test",
									"description": "Search query"
								},
								{
									"key": "type",
									"value": "all",
									"description": "Content type filter (posts, communities, users, all)"
								},
								{
									"key": "sortBy",
									"value": "relevance",
									"description": "Sort field (relevance, score, createdAt)"
								},
								{
									"key": "limit",
									"value": "20",
									"description": "Results limit per section"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Unified Search",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/search/unified?q=test&types=posts,users,communities&limit=20&offset=0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"search",
								"unified"
							],
							"query": [
								{
									"key": "q",
									"value": "test",
									"description": "Search query"
								},
								{
									"key": "types",
									"value": "posts,users,communities",
									"description": "Comma-separated list of content types to search"
								},
								{
									"key": "limit",
									"value": "20",
									"description": "Results limit per type"
								},
								{
									"key": "offset",
									"value": "0",
									"description": "Results offset"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Search Posts",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/search/posts?q=test&limit=20",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"search",
								"posts"
							],
							"query": [
								{
									"key": "q",
									"value": "test",
									"description": "Search query"
								},
								{
									"key": "limit",
									"value": "20",
									"description": "Results limit"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Search Users",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/search/users?q=test&limit=20",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"search",
								"users"
							],
							"query": [
								{
									"key": "q",
									"value": "test",
									"description": "Search query"
								},
								{
									"key": "limit",
									"value": "20",
									"description": "Results limit"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Search Communities",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/search/communities?q=test&limit=20",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"search",
								"communities"
							],
							"query": [
								{
									"key": "q",
									"value": "test",
									"description": "Search query"
								},
								{
									"key": "limit",
									"value": "20",
									"description": "Results limit"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Search Men Reviews",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/search/menReviews?q=test&limit=20",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"search",
								"menReviews"
							],
							"query": [
								{
									"key": "q",
									"value": "test",
									"description": "Search query"
								},
								{
									"key": "limit",
									"value": "20",
									"description": "Results limit"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Trending Posts",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/search/trending?limit=20",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"search",
								"trending"
							],
							"query": [
								{
									"key": "limit",
									"value": "20",
									"description": "Results limit"
								}
							]
						}
					},
					"response": []
				}
			],
			"description": "Global search functionality across all content types including posts, users, communities, and men reviews."
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:8080",
			"type": "string"
		},
		{
			"key": "authToken",
			"value": "your_firebase_id_token_here",
			"type": "string"
		},
		{
			"key": "refreshToken",
			"value": "",
			"type": "string"
		},
		{
			"key": "sessionStartedAt",
			"value": "0",
			"type": "string"
		},
		{
			"key": "tokenExpiresAt",
			"value": "0",
			"type": "string"
		},
		{
			"key": "adminToken",
			"value": "your_admin_firebase_id_token_here",
			"type": "string"
		},
		{
			"key": "userId",
			"value": "user_id_here",
			"type": "string"
		},
		{
			"key": "postId",
			"value": "post_id_here",
			"type": "string"
		},
		{
			"key": "commentId",
			"value": "comment_id_here",
			"type": "string"
		},
		{
			"key": "communityId",
			"value": "community_id_here",
			"type": "string"
		},
		{
			"key": "conversationId",
			"value": "conversation_id_here",
			"type": "string"
		},
		{
			"key": "messageId",
			"value": "message_id_here",
			"type": "string"
		},
		{
			"key": "deviceId",
			"value": "device_id_here",
			"type": "string"
		},
		{
			"key": "reportId",
			"value": "report_id_here",
			"type": "string"
		},
		{
			"key": "exportJobId",
			"value": "export_job_id_here",
			"type": "string"
		},
		{
			"key": "reviewId",
			"value": "review_id_here",
			"type": "string"
		},
		{
			"key": "uploadedUrl",
			"value": "",
			"type": "string"
		},
		{
			"key": "cloudName",
			"value": "dh3rzxbdh",
			"type": "string"
		},
		{
			"key": "messageId",
			"value": "message_id_here",
			"type": "string"
		},
		{
			"key": "reportId",
			"value": "report_id_here",
			"type": "string"
		}
	]
}